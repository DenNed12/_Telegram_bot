import telebot
from telebot import types
from conf import TOKEN
from questions import questions

bot = telebot.TeleBot(TOKEN)


user_points = {}


@bot.message_handler(commands=['start'])
def start(message: types.Message):
    text = ('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram –±–æ—Ç –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞!'
            ' –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—Å –∏ –ø—Ä–æ–π—Ç–∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! üêò')
    help_text = '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è –º–æ–≥—É, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /help'
    bot.send_message(message.chat.id, text=text)
    bot.send_message(message.chat.id, text=help_text)


    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    start_button = types.KeyboardButton('–ù–∞—á–∞—Ç—å')
    markup.add(start_button)
    bot.send_message(message.chat.id, text="–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—É!", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def main(message: types.Message):
    if message.text == '–ù–∞—á–∞—Ç—å':
        markup = types.InlineKeyboardMarkup()
        support = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞üõ†', callback_data='sup')
        quiz = types.InlineKeyboardButton('–í–∏–∫—Ç–æ—Ä–∏–Ω–∞‚ùì', callback_data='quiz')
        contacts = types.InlineKeyboardButton('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ãüì±', callback_data='cont')
        question = types.InlineKeyboardButton("–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å?", callback_data='question')
        markup.add(support, quiz)
        markup.add(contacts, question)

        bot.send_message(message.chat.id, text='–ß–µ–º –≤–∞–º –ø–æ–º–æ—á—å?', reply_markup=markup)
    elif message.text == '/help':
        bot.send_message(message.chat.id, text='–≠—Ç–æ help')

    elif message.text == '–î–∞':
        start_quiz(message)

    elif message.text == '–ù–µ—Ç':
        markup = types.InlineKeyboardMarkup()
        support = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞üõ†', callback_data='sup')
        quiz = types.InlineKeyboardButton('–í–∏–∫—Ç–æ—Ä–∏–Ω–∞‚ùì', callback_data='quiz')
        contacts = types.InlineKeyboardButton('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ãüì±', callback_data='cont')
        question = types.InlineKeyboardButton("–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å?", callback_data='question')
        markup.add(support, quiz)
        markup.add(contacts, question)

        bot.send_message(message.chat.id, text='–ß–µ–º –≤–∞–º –ø–æ–º–æ—á—å?', reply_markup=markup)



@bot.callback_query_handler(func=lambda call: True)
def callback_query(call: types.CallbackQuery):
    if call.data == 'quiz':
        start_quiz(call.message)
    elif call.data == 'sup':
        bot.send_message(call.message.chat.id, "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ email: support@example.com")
    elif call.data == 'cont':
        bot.send_message(call.message.chat.id, """
            –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: vk.com/moscow_zoo
            +7 (499) 252-29-51 - —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–ø—Ä–∞–≤–æ–∫
            +7 (499) 255-53-75- –∑–∞–∫–∞–∑ —ç–∫—Å–∫—É—Ä—Å–∏–π
            +7 (499) 255-57-63 - –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π  """)
    elif call.data == 'question':
        bot.send_message(call.message.chat.id, "–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")


def start_quiz(message: types.Message):
    user_points[message.chat.id] = 0
    send_question(message.chat.id, 0)


def send_question(chat_id, question_index):
    if question_index < len(questions):
        question_data = questions[question_index]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for option in question_data["answers"]:
            markup.add(types.KeyboardButton(option))
        bot.send_message(chat_id, question_data["question"], reply_markup=markup)
        bot.register_next_step_handler_by_chat_id(chat_id, lambda message: check_answer(message, question_index))
    else:
        bot.send_message(chat_id, f"–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í–∞—à —Å—á–µ—Ç: {user_points[chat_id]}")
        del user_points[chat_id]
        mark = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        agree = types.KeyboardButton("–î–∞")
        disagree = types.KeyboardButton("–ù–µ—Ç")
        mark.add(agree,disagree)
        bot.send_message(chat_id, f"–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –µ—â–µ —Ä–∞–∑?", reply_markup=mark)



def check_answer(message: types.Message, question_index):
    chat_id = message.chat.id
    correct_answer = questions[question_index]["right_answer"]
    if message.text == correct_answer:
        user_points[chat_id] += 1
        bot.send_message(chat_id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ")
    else:
        bot.send_message(chat_id, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")

    send_question(chat_id, question_index + 1)


if __name__ == "__main__":
    bot.skip_pending = True
    bot.polling(non_stop=True)