import telebot
from conf import TOKEN
from quiz import *
from questions import questions

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    text = ('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram –±–æ—Ç –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞!'
            ' –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—Å –∏ –ø—Ä–æ–π—Ç–∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! üêò')
    help = ('–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤—Ç–µ –∫–æ–º–∞–Ω–¥—É /help')
    bot.send_message(message.chat.id, text=text)
    bot.send_message(message.chat.id, text=help)
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    start = telebot.types.KeyboardButton('–ù–∞—á–∞—Ç—å')
    markup.add(start)
    bot.send_message(message.chat.id,text = "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—É!", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def main(message: telebot.types.Message):
    if message.text == '–ù–∞—á–∞—Ç—å':
        telebot.types.ReplyKeyboardRemove()
        markup = telebot.types.InlineKeyboardMarkup()
        support = telebot.types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞üõ†', callback_data='sup')
        quiz = telebot.types.InlineKeyboardButton('–í–∏–∫—Ç–æ—Ä–∏–Ω–∞‚ùì',callback_data='quiz')
        contacts = telebot.types.InlineKeyboardButton('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ãüì±', callback_data='cont')
        question = telebot.types.InlineKeyboardButton("–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å?", callback_data='question')
        print(support.callback_data)
        markup.add(support,quiz)
        markup.add(contacts,question)

        bot.send_message(message.chat.id,text ='–ß–µ–º –≤–∞–º –ø–æ–º–æ—á—å?', reply_markup=markup)
    elif message.text == '/help':
            bot.send_message(message.chat.id,text ='–≠—Ç–æ help')



@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
     message = call.message
     if call.data == 'quiz':
         quiz(message)



if __name__ ==  "__main__":
    bot.skip_pending = True
    bot.polling(non_stop=True)